server:
  port: 8090

gateway:
  custom-headers:
    user-id: ${GATEWAY_HEADERS_USER_ID}

spring:
  application:
    name: msvc-auth
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: ${JPA_HIBERNATE_DDL_AUTO}
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  servlet:
    multipart:
      max-file-size: 3MB
      max-request-size: 3MB
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid,profile,email
        provider:
          google:
            issuer-uri: https://accounts.google.com

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ${AWS_REGION_STATIC}
    s3:
      bucket: ${AWS_S3_BUCKET}

jwt:
  secret-key: ${JWT_SECRET_KEY}


kafka:
  topics:
    email-verification: ${KAFKA_TOPICS_EMAIL_VERIFICATION}